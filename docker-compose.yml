services:

  okapi:
    container_name: okapi-folio
    build:
      context: ./modules/okapi/okapi-core
      dockerfile: Dockerfile
    ports:
      - 9130:9130
    command: ["dev"]
    environment:
      - JAVA_OPTIONS=-Dloglevel=${OKAPI_LOG_LEVEL:-DEBUG} -Dtrace_headers=${OKAPI_TRACE_HEADERS:-true} -Dstorage=${OKAPI_STORAGE:-postgres} -Dport_end=${OKAPI_PORT_END:-9200} -Denable_system_auth=${OKAPI_ENABLE_SYSTEM_AUTH:-true} -Dpostgres_host=${PG_HOST:-postgres} -Dpostgres_port=${PG_PORT:-5432} -Dpostgres_database=${PG_DATABASE:-okapi_modules} -Dpostgres_username=${PG_USERNAME:-folio_admin} -Dpostgres_password=${PG_PASSWORD:-folio_admin}
    networks:
      - default

  postgres:
    container_name: postgres-folio
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${PG_DATABASE:-okapi_modules}
      - POSTGRES_USER=${PG_USERNAME:-folio_admin}
      - POSTGRES_PASSWORD=${PG_PASSWORD:-folio_admin}
      - PGDATA=${PG_DATA:-/data/postgres}
      - POSTGRES_SUPERUSER_USERNAME=${PG_SUPERUSER_USERNAME:-postgres}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - default

  pgadmin:
    container_name: pgadmin-folio
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-False}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - default

  zookeeper:
    container_name: zookeeper-folio
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=${ALLOW_ANONYMOUS_LOGIN:-yes}
    restart: always
    networks:
      - default

  kafka:
    container_name: kafka-folio
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID:-1}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${KAFKA_CFG_ZOOKEEPER_CONNECT:-zookeeper:2181}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP:-CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT}
      - KAFKA_CFG_LISTENERS=${KAFKA_CFG_LISTENERS:-CLIENT://:9092,EXTERNAL://:9093}
      - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_CFG_ADVERTISED_LISTENERS:-CLIENT://kafka:9092,EXTERNAL://localhost:9092}
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=${KAFKA_CFG_INTER_BROKER_LISTENER_NAME:-CLIENT}
      - ALLOW_PLAINTEXT_LISTENER=${ALLOW_PLAINTEXT_LISTENER:-yes}
    depends_on:
      - zookeeper
    restart: always
    networks:
      - default

  elasticsearch:
    container_name: elasticsearch-folio
    image: bitnami/elasticsearch:7.17.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ELASTICSEARCH_PLUGINS=${ELASTICSEARCH_PLUGINS:-analysis-icu,analysis-kuromoji,analysis-smartcn,analysis-nori,analysis-phonetic}
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    container_name: kibana_folio
    volumes:
      - kibana-data:/usr/share/kibana/data
    ports:
     - 5601:5601
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-http://elasticsearch_folio:9200}
    depends_on:
      - elasticsearch
    networks:
      - default

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio-folio
    command: server --console-address ":9090" /data
    volumes:
      - minio-data:/data
    ports:
      - "9009:9000"
      - "9090:9090"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password}

volumes:
  postgres:
  pgadmin:
  zookeeper-volume:
  kafka-volume:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
  minio-data:

networks:
  default:
    name: folio
